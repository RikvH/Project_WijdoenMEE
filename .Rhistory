#####################################
### How tough is a cycling route? ###
###                               ###
###       Team Wij doen MEE       ###
### Rik van Heumen & Dillen Bruil ###
###                               ###
###    GeoScripting - GRS30806    ###
###        Period 3 - 2017        ###
#####################################
rm(list=ls())
## Load functions
source("Rfunctions/packageloader.R")
source("Rfunctions/cropAlt.R")
source("Rfunctions/setBaseOSM.R")
source("Rfunctions/findRoute2.R")
source("Rfunctions/routeDetails.R")
source("Rfunctions/CalculateAltitude.R")
source("Rfunctions/nodeDiff.R")
source("Rfunctions/toughness.R")
## Load packages
packages <- c("osmar", "rgdal", "raster", "igraph")
packageloader(packages)
## Load data
# Center coordinates:
ext <- c(50.861065, 5.833611)
# Create height map
nedCrop <- cropAlt(ext)
## General Part
loc <- setBaseOSM(ext)
# Find shortest route
#route <- findRoute("Gosewijnstraat", "Neerhem")
route <- findRoute(50.862062, 5.833501, 50.865743, 5.832180)
# Create dataframe with the route details
route_details <- routeDetails(route)
# Make a spatial point data frame from the route
route_points <- as_sp(route, "points")
# Extract altitude from the nodes
alt <- altitude(route_points)
# Calculate the total difference
vdist <- nodeDiff(alt)
sum(vdist)
# Calculate the toughness
tough <- toughness(vdist, route_details$dist)
tough
plot(nedCrop)
plot(route_points, add=T)
#####################################
### How tough is a cycling route? ###
###                               ###
###       Team Wij doen MEE       ###
### Rik van Heumen & Dillen Bruil ###
###                               ###
###    GeoScripting - GRS30806    ###
###        Period 3 - 2017        ###
#####################################
rm(list=ls())
## Load functions
source("Rfunctions/packageloader.R")
source("Rfunctions/cropAlt.R")
source("Rfunctions/setBaseOSM.R")
source("Rfunctions/findRoute2.R")
source("Rfunctions/routeDetails.R")
source("Rfunctions/CalculateAltitude.R")
source("Rfunctions/nodeDiff.R")
source("Rfunctions/toughness.R")
## Load packages
packages <- c("osmar", "rgdal", "raster", "igraph")
packageloader(packages)
## Load data
# Center coordinates:
ext <- c(50.861065, 5.833611)
# Create height map
nedCrop <- cropAlt(ext)
## General Part
#loc <- setBaseOSM(ext)
# Find shortest route
#route <- findRoute("Gosewijnstraat", "Neerhem")
route <- findRoute(50.862062, 5.833501, 50.865743, 5.832180)
# Create dataframe with the route details
route_details <- routeDetails(route)
# Make a spatial point data frame from the route
route_points <- as_sp(route, "points")
# Extract altitude from the nodes
alt <- altitude(route_points)
# Calculate the total difference
vdist <- nodeDiff(alt)
sum(vdist)
# Calculate the toughness
tough <- toughness(vdist, route_details$dist)
tough
plot(nedCrop)
plot(route_points, add=T)
#####################################
### How tough is a cycling route? ###
###                               ###
###       Team Wij doen MEE       ###
### Rik van Heumen & Dillen Bruil ###
###                               ###
###    GeoScripting - GRS30806    ###
###        Period 3 - 2017        ###
#####################################
rm(list=ls())
## Load functions
source("Rfunctions/packageloader.R")
source("Rfunctions/cropAlt.R")
source("Rfunctions/setBaseOSM.R")
source("Rfunctions/findRoute2.R")
source("Rfunctions/routeDetails.R")
source("Rfunctions/CalculateAltitude.R")
source("Rfunctions/nodeDiff.R")
source("Rfunctions/toughness.R")
## Load packages
packages <- c("osmar", "rgdal", "raster", "igraph")
packageloader(packages)
## Load data
# Center coordinates:
ext <- c(50.861065, 5.833611)
# Create height map
nedCrop <- cropAlt(ext)
## General Part
loc <- setBaseOSM(ext)
# Find shortest route
#route <- findRoute("Gosewijnstraat", "Neerhem")
route <- findRoute(50.862062, 5.833501, 50.865743, 5.832180)
# Create dataframe with the route details
route_details <- routeDetails(route)
# Make a spatial point data frame from the route
route_points <- as_sp(route, "points")
# Extract altitude from the nodes
alt <- altitude(route_points)
# Calculate the total difference
vdist <- nodeDiff(alt)
sum(vdist)
# Calculate the toughness
tough <- toughness(vdist, route_details$dist)
tough
plot(nedCrop)
plot(route_points, add=T)
View(route_details)
