{
    "collab_server" : "",
    "contents" : "###################################\n## Wij doen MEE                  ##\n## Rik van Heumen & Dillen Bruil ##\n## 31 January 2017               ##\n###################################\n\n## Fucntion to create a data frame with route details\n\nrouteDetails <- function(route){\n  \n  # Extract the node id's which are in the correct order of the route\n  # and extract the way id's which need to be ordered to the route\n  node_ids <- route$nodes$attrs$id\n  way_ids <- local({\n    w <- match(node_ids, route$ways$refs$ref)\n    route$ways$refs$id[w]\n  })\n  \n  # Extract the names of the ways in the correct order\n  way_names <- local({\n    n <- subset(route$ways$tags, k == \"name\")\n    n[match(way_ids, n$id), \"v\"]\n  })\n  \n  # Extract the coordinates\n  node_coords <- route$node$attrs[,c(\"lon\", \"lat\")]\n  \n  # Compute distances and directions\n  node_dirs <- local({\n    n <- nrow(node_coords)\n    from <- 1:(n-1)\n    to <- 2:n\n    \n    cbind(dist=c(0, distHaversine(node_coords[from,], \n                                  node_coords[to,])),\n          bear = c(0, bearing(node_coords[from,],\n                              node_coords[to, ])))\n  })\n  \n  # Function that defines the direction on a compass\n  compass <- function(bearing) {\n    dir <- function(x) {\n      switch(as.character(x),\n             \"0\" = \"N\",\n             \"1\" = \"NNE\",\n             \"2\" = \"NE\",\n             \"3\" = \"ENE\",\n             \"4\" = \"E\",\n             \"5\" = \"ESE\",\n             \"6\" = \"SE\",\n             \"7\" = \"SSE\",\n             \"8\" = \"S\",\n             \"9\" = \"SSW\",\n             \"10\" = \"SW\",\n             \"11\" = \"WSW\",\n             \"12\" = \"W\",\n             \"13\" = \"WNW\",\n             \"14\" = \"NW\",\n             \"15\" = \"NNW\",\n             \"16\" = \"N\"\n      )\n      } \n    sapply(round(bearing / 22.5), dir)\n    }\n  \n  # Create data frame\n  route_details <- data.frame(way_names, node_dirs)\n  # Convert negative bearing to positive bearing \n  for (i in 1:length(route_details$bear)){if (route_details$bear[i] < 0){ route_details$bear[i] <- route_details$bear[i] +360 }}\n  # Calculate and add cumulative distance to the data frame\n  route_details$cdist <- cumsum(route_details$dist)\n  # Calculate and add compass direction to the data frame\n  route_details$dir <- compass(route_details$bear)\n  # Return data frame with route details\n  return(route_details)\n  }\n\n\n",
    "created" : 1485851107900.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3609868720",
    "id" : "C7221398",
    "lastKnownWriteTime" : 1485858442,
    "last_content_update" : 1485858442140,
    "path" : "~/WUR/MEE/GeoScripting/Project/Rfunctions/routeDetails.R",
    "project_path" : "Rfunctions/routeDetails.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}