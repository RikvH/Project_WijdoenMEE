{
    "collab_server" : "",
    "contents" : "#####################################\n### How tough is a cycling route? ###\n###                               ###\n###       Team Wij doen MEE       ###\n### Rik van Heumen & Dillen Bruil ###\n###                               ###\n###    GeoScripting - GRS30806    ###\n###        Period 3 - 2017        ###\n#####################################\n\n#rm(list=ls())\n\n### IMPORTANT NOTE! PLEASE RUN SECTION 2 BEFORE RUNNING SECTIONS 3 AND 4.\n### SECTION 2 REQUIRES AN INPUT, IN CASE OF NO RESPONSE, THE SCRIPT WILL NOT CONTINUE TO RUN\n\n### Section 1: Set up -------------------------------------------------------------------------------------------------\n\n## Load functions\nsource(\"Rfunctions/packageloader.R\")\nsource(\"Rfunctions/cropAlt.R\")\nsource(\"Rfunctions/setBaseOSM.R\")\nsource(\"Rfunctions/create_osmar.R\")\nsource(\"Rfunctions/findRoute.R\")\nsource(\"Rfunctions/routeDetails.R\")\nsource(\"Rfunctions/CalculateAltitude.R\")\nsource(\"Rfunctions/nodeDiff.R\")\nsource(\"Rfunctions/toughness.R\")\n\n## Load packages\npackages <- c(\"osmar\", \"rgdal\", \"raster\", \"igraph\")\npackageloader(packages)\n\n## Load data\n# Center coordinates and width and height of the bounding box:\next <- c(50.861065, 5.833611, 100, 100)\n\n# Create height map\nnedCrop <- cropAlt(ext)\n\n\n\n\n\n### Section 2: Osmar object -------------------------------------------------------------------------------------------\n\n# Create an osmar object\nloc <- create_osmar(ext)\n\n\n\n\n\n### Section 3: Route delivery -----------------------------------------------------------------------------------------\n\n# Find shortest route\nroute <- findRoute(50.862062, 5.833501, 50.865743, 5.832180)\n\n# Create dataframe with the route details\nroute_details <- routeDetails(route)\n\n# Make a spatial point data frame from the route \nroute_points <- as_sp(route, \"points\")\n\n# Extract altitude from the nodes\nalt <- altitude(route_points)\n  \n# Calculate the total difference\nvdist <- nodeDiff(alt)\nsum(vdist)\n\n\n\n\n\n### Section 4: Output -------------------------------------------------------------------------------------------------\n\n# Calculate the toughness\ntough <- toughness(vdist, route_details$dist)\ntough\n\nplot(nedCrop)\nplot(route_points, add=T)\n\n",
    "created" : 1485785739351.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "806804296",
    "id" : "A16612F9",
    "lastKnownWriteTime" : 1485952365,
    "last_content_update" : 1485952365434,
    "path" : "~/WUR/MEE/GeoScripting/Project/Main.R",
    "project_path" : "Main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}